version: '2'
services:
  nest:
    env_file:
      - .env
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
    build: .
    container_name: nest-app
    restart: always
    depends_on:
      - db-user
      - db-wallet
      - kafka
      - redis
    ports:
      - 3000:3000

  db-user:
    image: postgres:latest
    container_name: db-user
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    restart: always
    ports:
      - 5433:5432
    # volumes:
    #   # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #   - pgdata:/var/lib/postgresql/data

  db-wallet:
    image: postgres:latest
    container_name: db-wallet
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    restart: always
    ports:
      - 5432:5432
    # volumes:
    #   # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #   - pgdata-wallet:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: nest-redis
    ports:
      - 6379:6379

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    container_name: kafdrop
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
    depends_on:
      - 'kafka'
  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: always
    hostname: kafka
    ports:
      - '2181:2181'
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_HOST_NAME: 'kafka'
      KAFKA_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
      KAFKA_RESTART_ATTEMPTS: '10'
      KAFKA_RESTART_DELAY: '5'
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'

# volumes:
#   pgdata:
#   pgdata-wallet:
networks:
  app-network:
    name: app-network
    driver: bridge
